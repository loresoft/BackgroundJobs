// <auto-generated />
#nullable enable

namespace Backgrounder.Sample
{
    /// <summary>
    /// Extension methods for Backgrounder
    /// </summary>
    public static partial class SampleJobCheckPersonExtensions
    {
        public record CheckPersonMessageDAADBCDB(Backgrounder.Sample.Person person);

        /// <summary>
        /// Enqueue the method Backgrounder.Sample.SampleJob.CheckPerson(Backgrounder.Sample.Person) for execution in the background
        /// </summary>
        public static async global::System.Threading.Tasks.Task CheckPerson(this global::Backgrounder.IBackgrounder backgrounder, Backgrounder.Sample.Person person)
        {
            var methodParameters = new CheckPersonMessageDAADBCDB(person);
            await backgrounder.EnqueueAsync("Backgrounder.Sample.SampleJob.CheckPerson(Backgrounder.Sample.Person)", methodParameters);
        }

        internal static global::System.Threading.Tasks.Task ExecuteCheckPersonDAADBCDB(global::System.IServiceProvider serviceProvider, byte[] messageBody)
        {
            var messageSerializer = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Backgrounder.IMessageSerializer>(serviceProvider);
            var methodParameters = messageSerializer.Deserialize<CheckPersonMessageDAADBCDB>(messageBody);
            var worker = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleJob>(serviceProvider);
            worker.CheckPerson(methodParameters.person);
            return global::System.Threading.Tasks.Task.CompletedTask;
        }

        [global::System.Runtime.CompilerServices.ModuleInitializerAttribute]
        internal static void RegisterCheckPersonDAADBCDB()
        {
            BackgroundRouter.Register("Backgrounder.Sample.SampleJob.CheckPerson(Backgrounder.Sample.Person)", Backgrounder.Sample.SampleJobCheckPersonExtensions.ExecuteCheckPersonDAADBCDB);
        }

    }
}
