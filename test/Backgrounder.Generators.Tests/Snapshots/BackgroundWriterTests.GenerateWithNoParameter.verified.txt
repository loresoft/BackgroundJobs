// <auto-generated />
#nullable enable

namespace Backgrounder.Sample
{
    /// <summary>
    /// Extension methods for Backgrounder
    /// </summary>
    public static partial class SampleJobRunWorkExtensions
    {
        public record RunWorkMessageFDSSA();

        /// <summary>
        /// Enqueue the method public Task RunWork(int?) for execution in the background
        /// </summary>
        public static async global::System.Threading.Tasks.Task RunWork(this global::Backgrounder.IBackgrounder backgrounder)
        {
            await backgrounder.EnqueueAsync<object?>("public Task RunWork(int?)", default);
        }

        internal static async global::System.Threading.Tasks.Task ExecuteRunWorkFDSSA(global::System.IServiceProvider serviceProvider, byte[] messageBody)
        {
            var worker = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<SampleJob>(serviceProvider);
            await worker.RunWork();
        }

        [global::System.Runtime.CompilerServices.ModuleInitializerAttribute]
        internal static void RegisterRunWorkFDSSA()
        {
            BackgroundRouter.Register("public Task RunWork(int?)", Backgrounder.Sample.SampleJobRunWorkExtensions.ExecuteRunWorkFDSSA);
        }

    }
}
