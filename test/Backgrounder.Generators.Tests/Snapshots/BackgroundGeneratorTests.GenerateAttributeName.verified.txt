// <auto-generated />
#nullable enable

namespace Backgrounder.Sample
{
    /// <summary>
    /// Extension methods for Backgrounder
    /// </summary>
    public static partial class SampleJobRunScheduleExtensions
    {
        public record RunScheduleMessageAD882E86();

        /// <summary>
        /// Enqueue the method Backgrounder.Sample.SampleJob.RunSchedule() for execution in the background
        /// </summary>
        public static async global::System.Threading.Tasks.Task RunScheduler(this global::Backgrounder.IBackgrounder backgrounder)
        {
            await backgrounder.EnqueueAsync<object?>("Backgrounder.Sample.SampleJob.RunSchedule()", default);
        }

        internal static global::System.Threading.Tasks.Task ExecuteRunScheduleAD882E86(global::System.IServiceProvider serviceProvider, byte[] messageBody)
        {
            var worker = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<Backgrounder.Sample.ISampleJob>(serviceProvider);
            worker.RunSchedule();
            return global::System.Threading.Tasks.Task.CompletedTask;
        }

        [global::System.Runtime.CompilerServices.ModuleInitializerAttribute]
        internal static void RegisterRunScheduleAD882E86()
        {
            BackgroundRouter.Register("Backgrounder.Sample.SampleJob.RunSchedule()", Backgrounder.Sample.SampleJobRunScheduleExtensions.ExecuteRunScheduleAD882E86);
        }

    }
}
